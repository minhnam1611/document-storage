spring:
  application:
    name: authentication-service
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.timezone.default_storage: NORMALIZE
      hibernate.type.preferred_instant_jdbc_type: TIMESTAMP
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  main:
    allow-bean-definition-overriding: true
  mvc:
    problemdetails:
      enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          authority-prefix: ''
          authorities-claim-name: auth
      client:
        registration:
          google:
            client-id: 854216277152-5nln0hfno4b71bnjcu5hnlcrsub7tpi0.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: http://localhost:8084/login/oauth2/code/google
  task:
    execution:
      thread-name-prefix: authentication-service-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: authentication-service-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
    cache: false
  output:
    ansi:
      console-available: true
  config:
    activate:
      on-profile: '!api-docs'
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://10.1.125.122:5432/auth_service
    username: postgres
    password: password
    hikari:
      poolName: Hikari
      auto-commit: false
  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    contexts: dev, faker
  messages:
    basename: i18n/messages
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
springdoc:
  api-docs:
    enabled: false
---
feign:
  circuitbreaker:
    enabled: true
management:
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0 # report 100% of traces

  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          - configprops
          - env
          - health
          - info
          - jhimetrics
          - jhiopenapigroups
          - logfile
          - loggers
          - prometheus
          - threaddump
          - caches
          - liquibase
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState,db
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
    env:
      enabled: true
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  prometheus:
    metrics:
      export:
        enabled: true
        step: 60
  observations:
    key-values:
      application: ${spring.application.name}
  metrics:
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    data:
      repository:
        autotime:
          enabled: true


server:
  port: 8084
  servlet:
    session:
      cookie:
        http-only: true

springdoc:
  show-actuator: true

jhipster:
  clientApp:
    name: 'authenticationServiceApp'

  cache: # Cache configuration
    redis: # Redis configuration
      expiration: 3600 # By default objects stay 1 hour (in seconds) in the cache
      server: redis://localhost:6379
      cluster: false


  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      ring-buffer-size: 512
  mail:
    from: AuthenticationService@localhost
  api-docs:
    default-include-pattern: /api/**
    management-include-pattern: /management/**
    title: Authentication Service API
    description: Authentication Service API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
logging:
  level:
    ROOT: DEBUG
    tech.jhipster: DEBUG
    org.hibernate.SQL: DEBUG
    com.vnpt.authentication: DEBUG
    io.grpc: error

# application:
grpc:
  server:
    port: 9083

vnpt:
  app:
    jwtSecret: SECRETKEYFRAMEWORKSITHS2023SECRETKEYFRAMEWORKSITHS2023SECRETKEYFRAMEWORKSITHS2023SECRETKEYFRAMEWORKSITHS2023SECRETKEYFRAMEWORKSITHS2023
    jwtExpirationMs: 3000000
    jwtRefreshExpirationMs: 604800000

app:
  welcomeMsg: Hello from client config application
